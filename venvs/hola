<html>
    <head>
        <style>
            .container {
                margin: 0 auto;
                text-align: center;
                padding: 20% 0;
            }
            h1 {
                font-family: "omnes-pro", "Omnes", Helvetica, Arial, sans-serif;
                font-size: 32px;
                font-weight: 200;
                color: #777777;
                line-height: 1.5em;
            }
            .spinner {
              animation: rotator 1.4s linear infinite;
            }
            @keyframes rotator {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(270deg); }
            }
            .path {
              stroke-dasharray: 187;
              stroke-dashoffset: 0;
              transform-origin: center;
              animation:
                dash 1.4s ease-in-out infinite,
                colors 5.6s ease-in-out infinite;
            }
            @keyframes colors {
                0% { stroke: #eeeeee; }
                25% { stroke: #eeeeee; }
              100% { stroke: #f8931e; }
            }
            @keyframes dash {
             0% { stroke-dashoffset: 187; }
             50% {
               stroke-dashoffset: 46.75;
               transform:rotate(135deg);
             }
             100% {
               stroke-dashoffset: 187;
               transform:rotate(450deg);
             }
            }
        </style>
        <script src="//code.jquery.com/jquery-2.1.4.min.js"></script>
        <script src="/lib/cache/3fa064f2b2ae610ab0c2bba3163db68d.js?ver=1521746493"></script>        <script src="/lib/cache/fdabc1afb4967e0f4ac2930b9f5f7397.js?ver=1509986819"></script>    </head>
    <body>
        <div class="container">
            <svg class="spinner" width="65px" height="65px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                <circle class="path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle>
            </svg>
            <h1>Logging In ... </h1>
        </div>
        <script>
            var ssoConfig = {"domain":"lacausers.auth0.com","clientID":"KaWxNn1C2Gc7n83W9OFeXltd8Utb5vvx","redirectUri":"https:\/\/linuxacademy.com","audience":"https:\/\/linuxacademy.com","responseType":"token id_token","scope":"openid email user_impersonation profile","logoutURL":"https:\/\/linuxacademy.com"};
            var webAuth = new auth0.WebAuth(ssoConfig);
            $('document').ready(function(){

                // buttons and event listeners
                var loginBtn = $('.btn-login');
                var logoutBtn = $('#btn-logout');

                loginBtn.click(function(e) {
                    e.preventDefault();
                    webAuth.authorize({});
                });
                logoutBtn.click(logout);


                if(isAuthenticated()) {
                    // make a call to serenity to see if serenity knows they are logged in
                    // if not send the token in for validation, but maybe not auto redirect the user
                    // instead update login / signup links to show dashboard link
                    validateToken(localStorage.getItem('access_token'), function(data){
                        window.location = data.redirect;
                    });
                } else {
                    if(window.location.hash != ""){
                        if(window.location.hash.indexOf('error') !== -1){
                            window.location = "/cp/login/error" + window.location.hash;
                        } else {
                            handleAuthentication(function(authResult){
                                validateToken(authResult.accessToken, function(data){
                                    window.location = data.redirect;
                                });
                            });
                        }
                    } else {
                        checkSession(webAuth, ssoConfig, function(err, authResult) {
                            if(err){
                                console.log(err);
                                // the user is not logged in prior to this call
                                // if they need to be logged in prompt for that
                                // if not do whatever you need to
                                ssoConfig.redirectUri = ssoConfig.redirectUri+'/cp/ssologin';
                                var ssoAuth = new auth0.WebAuth(ssoConfig);
                                ssoAuth.authorize();
                            } else {
                                console.log(authResult);
                                // add token data to locaStorage
                                setSession(authResult);
                                validateToken(authResult.accessToken, function(data){
                                    window.location = data.redirect;
                                });
                                // do whatever you need .. maybe hide login buttons and replace if that hasn't happened already
                            }
                        });
                    }
                    // should probably also show a spinner animation if checkSession takes more than a few seconds (which it does if the user does not need to login)
                    // checkSession will then handle two possibilities
                    // either set the user as not logged in, or update the token
                    // the latter should probably repeat what we did for condition isAuthenticated == true
                }
            });
        </script>
    </body>
</html>
   